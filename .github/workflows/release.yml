name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Criar executável com PyInstaller
        run: |
          mkdir -p dist
          pyinstaller --onefile --noconsole --icon=ui/icon.ico main.py --name UnityPackageForge

      - name: Gerar Certificado Autoassinado
        shell: pwsh
        run: |
          $cert = New-SelfSignedCertificate -Type CodeSigning -Subject "CN=UnityPackageForge" -CertStoreLocation "Cert:\CurrentUser\My" -KeyExportPolicy Exportable -NotAfter (Get-Date).AddYears(1)
          $password = ConvertTo-SecureString -String "R@nd0mÇçP@ss789!" -Force -AsPlainText
          Export-PfxCertificate -Cert $cert -FilePath ".\certificate.pfx" -Password $password

      - name: Assinar o executável
        shell: pwsh
        run: |
          $signtool = "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x86\signtool.exe"
          $password = "R@nd0mÇçP@ss789!"
          $executable = "dist\UnityPackageForge.exe"
          &$signtool sign /f certificate.pfx /p $password /fd sha256 /tr http://timestamp.digicert.com /td sha256 /a $executable

      - name: Verificar arquivos na pasta dist
        run: dir dist

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Instalar dependências do semantic-release
        run: |
          npm install --save-dev semantic-release @semantic-release/github @semantic-release/changelog @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator

      - name: Criar arquivo de configuração do semantic-release
        run: |
          @"
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              ["@semantic-release/github", {
                "assets": [
                  {"path": "dist/UnityPackageForge.exe", "label": "UnityPackageForge.exe"}
                ]
              }],
              "@semantic-release/git"
            ]
          }
          "@ | Out-File -FilePath .releaserc.json -Encoding UTF8

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

